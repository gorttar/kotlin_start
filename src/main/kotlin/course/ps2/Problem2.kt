package course.ps2

import lib.test.FAIL
import lib.test.passTo
import lib.test.shouldBeEqualTo

/**
 * Необходимо написать функцию, которая находит минимальный фиксированный месячный платёж, достаточный для погашения
 * долга по кредитной карте за 12 месяцев.
 * В этой задаче мы не будем использовать доля минимального ежемесячного платежа
 *
 * Параметры функции:
 *
 * [balance]            сумма долга по кредитной карте
 * [annualInterestRate] годовая ставка в виде доли
 * *    (если ставка 18%, то [annualInterestRate] будет равно 0.18)
 *
 * Функция должна возвращать одну строку, в которой будет написан минимальный фиксированный месячный платёж, например:
 *
 * *    "Lowest Payment: 180"
 *
 * Считай, что проценты начисляются ежемесячно на остаток долга после внесения месячного платежа. Месячный платёж для
 * данной задачи подбирается среди сумм кратных 10 рублям и одинаков для всех 12 месяцев. Имей ввиду, что при такой
 * схеме оплаты итоговая сумма долга через 12 месяцев может оказаться отрицательной, это нормально.
 *
 * Необходимая для расчета математика:
 * *    Месячная ставка = (годовая ставка) / 12.0
 * *    Остаток долга = (предыдущая сумма долга) - (минимальный фиксированный месячный платёж)
 * *    Сумма долга = (остаток долга) + (месячная ставка * остаток долга)
 *
 * Ниже прилагаются примеры тестов.
 * *    Тест 1
 * *        Входные параметры:
 * *            [balance] = 3329.0
 * *            [annualInterestRate] = 0.2
 * *        Ожидаемый результат: "Lowest Payment: 310"
 *
 * *    Тест 2
 * *        Входные параметры:
 * *            [balance] = 4773.0
 * *            [annualInterestRate] = 0.2
 * *        Ожидаемый результат: "Lowest Payment: 440"
 *
 * *    Тест 3
 * *            [balance] = 3926.0
 * *            [annualInterestRate] = 0.2
 * *        Ожидаемый результат: "Lowest Payment: 360"
 *
 * Для проверки задания запускаешь [main] и смотришь вывод. Он должен быть зелёным, если всё верно
 */
fun payInAYearExhaustive(balance: Double, annualInterestRate: Double): String {
    FAIL
}

/**
 * запусти, чтобы протестировать функцию [payMinimalAYear]
 */
fun main() = (sequenceOf(
    PayInAYearCase(3329.0, 0.2, "Lowest Payment: 310"),
    PayInAYearCase(3926.0, 0.2, "Lowest Payment: 360"),
    PayInAYearCase(4773.0, 0.2, "Lowest Payment: 440")
) + exhaustiveCases.shuffled().asSequence().take(10)).forEach { (args, expected) ->
    args passTo { payInAYearExhaustive(balance, annualInterestRate) } shouldBeEqualTo expected
}